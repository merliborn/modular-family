[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FinNatException\">FinNatException</a><ul class=\"subs\"><li>= <a href=\"#v:NonPositiveUpperBound\">NonPositiveUpperBound</a></li><li>| <a href=\"#v:ValueOverflow\">ValueOverflow</a></li><li>| <a href=\"#v:ValueUnderflow\">ValueUnderflow</a></li></ul>","name":"FinNatException NonPositiveUpperBound ValueOverflow ValueUnderflow","module":"Data.Modular.Some.Exception","link":"Data-Modular-Some-Exception.html#t:FinNatException"},{"display_html":"<span class=\"keyword\">class</span> (Typeable e, Show e) =&gt; <a href=\"#t:Exception\">Exception</a> e <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toException\">toException</a> :: e -&gt; SomeException</li><li><a href=\"#v:fromException\">fromException</a> :: SomeException -&gt; Maybe e</li><li><a href=\"#v:displayException\">displayException</a> :: e -&gt; String</li></ul>","name":"Exception toException fromException displayException","module":"Data.Modular.Some.Exception","link":"Data-Modular-Some-Exception.html#t:Exception"},{"display_html":"<a href=\"#v:throw\">throw</a> :: <span class=\"keyword\">forall</span> (r :: RuntimeRep) (a :: TYPE r) e. <a href=\"Data-Modular-Some-Exception.html#t:Exception\" title=\"Data.Modular.Some.Exception\">Exception</a> e =&gt; e -&gt; a","name":"throw","module":"Data.Modular.Some.Exception","link":"Data-Modular-Some-Exception.html#v:throw"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:FinNat\">FinNat</a> (n :: Nat)","name":"FinNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:FinNat"},{"display_html":"<span class=\"keyword\">pattern</span> <a href=\"#v:FNat\">FNat</a> :: Natural -&gt; SNat n -&gt; <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n","name":"FNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:FNat"},{"display_html":"<a href=\"#v:zero\">zero</a> :: <span class=\"keyword\">forall</span> n. (KnownNat n, (1 :: Nat) &lt;= n) =&gt; <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n","name":"zero","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:zero"},{"display_html":"<a href=\"#v:boundSing\">boundSing</a> :: <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n -&gt; SNat n","name":"boundSing","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:boundSing"},{"display_html":"<a href=\"#v:upcast\">upcast</a> :: <span class=\"keyword\">forall</span> m n. (KnownNat n, KnownNat m, m &lt;= n) =&gt; <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> m -&gt; <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n","name":"upcast","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:upcast"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SomeFinNat\">SomeFinNat</a>","name":"SomeFinNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:SomeFinNat"},{"display_html":"<a href=\"#v:someFinNat\">someFinNat</a> :: (Integral a, Integral b) =&gt; a -&gt; b -&gt; Maybe <a href=\"Data-Modular-Some.html#t:SomeFinNat\" title=\"Data.Modular.Some\">SomeFinNat</a>","name":"someFinNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:someFinNat"},{"display_html":"<a href=\"#v:toMaybeFinNat\">toMaybeFinNat</a> :: <span class=\"keyword\">forall</span> a (n :: Nat). (Integral a, KnownNat n) =&gt; a -&gt; Maybe (<a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n)","name":"toMaybeFinNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#v:toMaybeFinNat"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:CompatibleWithFNat\">CompatibleWithFNat</a> (n :: Nat) a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromFinNat\">fromFinNat</a> :: <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n -&gt; a</li><li><a href=\"#v:toFinNat\">toFinNat</a> :: KnownNat n =&gt; a -&gt; <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> n</li></ul>","name":"CompatibleWithFNat fromFinNat toFinNat","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:CompatibleWithFNat"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FinNat8\">FinNat8</a> = <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> (256 :: Nat)","name":"FinNat8","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:FinNat8"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FinNat16\">FinNat16</a> = <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> (65536 :: Nat)","name":"FinNat16","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:FinNat16"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FinNat32\">FinNat32</a> = <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> (4294967296 :: Nat)","name":"FinNat32","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:FinNat32"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:FinNat64\">FinNat64</a> = <a href=\"Data-Modular-Some.html#t:FinNat\" title=\"Data.Modular.Some\">FinNat</a> (18446744073709551616 :: Nat)","name":"FinNat64","module":"Data.Modular.Some","link":"Data-Modular-Some.html#t:FinNat64"}]